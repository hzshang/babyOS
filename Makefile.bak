include .env

INCLUDE_PATH :=include
TARGET :=bin/

KERN_LD_SCRIPT :=tools/kernel.ld.S


kernel := kernel/kernel.elf
libc := libs/libc.so
bootloader := boot/bootloader
img := bin/os.img
.PHONY: $(img) $(kernel) $(bootloader) clean build

all: $(img)
	@echo "make done"

$(img): $(kernel)
	mkdir iso
	mkdir iso/boot
	mkdir iso/boot/grub
	cp $< iso/boot/kernel.elf
	echo 'set timeout=0' > iso/boot/grub/grub.cfg
	echo 'set default=0' >> iso/boot/grub/grub.cfg
	echo '' >> iso/boot/grub/grub.cfg
	echo 'menuentry "my os" {' >> iso/boot/grub/grub.cfg
	echo '  multiboot /boot/kernel.elf' >> iso/boot/grub/grub.cfg
	echo '  boot' >> iso/boot/grub/grub.cfg
	echo '}' >> iso/boot/grub/grub.cfg
	grub-mkrescue --output=kernel.iso iso
	rm -rf iso


gdb:$(img)
	$(QEMU) -S -s $(img)

qemu: 
	sudo $(QEMU) -nographic 

$(img):$(bootloader) $(kernel)
	@tools/buildImg.sh $@ $^

$(kernel): |$(libc)
	$(MAKE) -C kernel

$(bootloader):
	+$(MAKE) -C boot

$(libc):
	+$(MAKE) -C libs

clean:
	+$(MAKE) clean -C libs
	+$(MAKE) clean -C boot
	+$(MAKE) clean -C kernel
	$(RM) bin/*
